{"timestamp":"2025-07-11T11:29:33.772584","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-11T11:29:33.773310","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-11T11:29:34.219952Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T11:29:35.605111Z","level":"error","event":"25/07/11 11:29:35 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T11:29:35.782529Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T11:29:35.783200Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T11:29:35.783678Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T11:29:51.391425Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T11:29:51.392335Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T11:29:51.392665Z","level":"info","event":"Current task name:data_mino","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T11:29:51.392943Z","level":"info","event":"Dag name:etl_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T11:29:51.393281Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T11:29:51.393665Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T11:29:51.393992Z","level":"info","event":"Task:<Task(PythonOperator): data_mino>","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T11:29:51.394293Z","level":"info","event":"Failure caused by Invalid endpoint: http://my_minio:9000","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T11:29:45.666561","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"ValueError","exc_value":"Invalid endpoint: http://my_minio:9000","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":825,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1088,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":212,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":235,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/my_minio/upload.py","lineno":13,"name":"upload_to_minio"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/boto3/__init__.py","lineno":92,"name":"client"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/boto3/session.py","lineno":322,"name":"client"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/botocore/session.py","lineno":1015,"name":"create_client"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/botocore/client.py","lineno":165,"name":"create_client"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/botocore/client.py","lineno":524,"name":"_get_client_args"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/botocore/args.py","lineno":162,"name":"get_client_args"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/botocore/endpoint.py","lineno":408,"name":"create_endpoint"}]}]}
