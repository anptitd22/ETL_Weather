{"timestamp":"2025-07-11T16:13:56.830341","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-11T16:13:56.831446","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-11T16:13:57.352226Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T16:13:59.061349Z","level":"error","event":"25/07/11 16:13:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T16:13:59.308132Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T16:13:59.308910Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T16:13:59.309380Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T16:14:07.227524Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:07.232384Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:07.232919Z","level":"info","event":"Current task name:install_spark","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:07.233666Z","level":"info","event":"Dag name:etl_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.266925Z","level":"info","event":"Spark session started.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.354076Z","level":"info","event":"spark.hadoop.fs.s3a.vectored.read.min.seek.size = 128K","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.357043Z","level":"info","event":"spark.app.initial.jar.urls = spark://90756e632957:40987/jars/aws-java-sdk-auth-2.20.158.jar,spark://90756e632957:40987/jars/aws-java-sdk-core-2.20.158.jar,spark://90756e632957:40987/jars/aws-java-sdk-utils-2.20.158.jar,spark://90756e632957:40987/jars/ojdbc11.jar,spark://90756e632957:40987/jars/aws-sdk-core-2.20.158.jar,spark://90756e632957:40987/jars/aws-http-client-spi-2.20.158.jar,spark://90756e632957:40987/jars/aws-java-sdk-awscore-2.20.158.jar,spark://90756e632957:40987/jars/hadoop-aws-3.4.1.jar,spark://90756e632957:40987/jars/aws-java-sdk-s3-2.20.158.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.357489Z","level":"info","event":"spark.executor.extraJavaOptions = -Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-modules=jdk.incubator.vector --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false -Dio.netty.tryReflectionSetAccessible=true","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.357833Z","level":"info","event":"spark.sql.artifact.isolation.enabled = false","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.358189Z","level":"info","event":"spark.driver.port = 40987","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.358543Z","level":"info","event":"spark.app.startTime = 1752250439695","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.358876Z","level":"info","event":"spark.master = local[*]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.359147Z","level":"info","event":"spark.executor.id = driver","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.359420Z","level":"info","event":"spark.driver.extraClassPath = /opt/spark/jars/ojdbc11.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.359728Z","level":"info","event":"spark.app.name = BAITEST","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.359971Z","level":"info","event":"spark.submit.deployMode = client","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.360282Z","level":"info","event":"spark.hadoop.fs.s3a.connection.ssl.enabled = false","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.360542Z","level":"info","event":"spark.driver.host = 90756e632957","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.360934Z","level":"info","event":"spark.repl.local.jars = file:///opt/spark/jars/hadoop-aws-3.4.1.jar,file:///opt/spark/jars/aws-java-sdk-core-2.20.158.jar,file:///opt/spark/jars/aws-java-sdk-auth-2.20.158.jar,file:///opt/spark/jars/aws-java-sdk-s3-2.20.158.jar,file:///opt/spark/jars/aws-java-sdk-utils-2.20.158.jar,file:///opt/spark/jars/aws-java-sdk-awscore-2.20.158.jar,file:///opt/spark/jars/aws-http-client-spi-2.20.158.jar,file:///opt/spark/jars/aws-sdk-core-2.20.158.jar,file:///opt/spark/jars/ojdbc11.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.361548Z","level":"info","event":"spark.serializer.objectStreamReset = 100","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.361837Z","level":"info","event":"spark.ui.showConsoleProgress = true","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.362761Z","level":"info","event":"spark.hadoop.fs.s3a.path.style.access = true","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.363623Z","level":"info","event":"spark.rdd.compress = True","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.363987Z","level":"info","event":"spark.executor.extraClassPath = /opt/spark/jars/ojdbc11.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.364283Z","level":"info","event":"spark.hadoop.fs.s3a.endpoint = http://127.0.0.1:9000/","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.365162Z","level":"info","event":"spark.hadoop.fs.s3a.access.key = admin","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.365647Z","level":"info","event":"spark.app.submitTime = 1752250439262","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.366089Z","level":"info","event":"spark.hadoop.fs.s3a.aws.credentials.provider = org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.366597Z","level":"info","event":"spark.submit.pyFiles =","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.366983Z","level":"info","event":"spark.driver.extraJavaOptions = -Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-modules=jdk.incubator.vector --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false -Dio.netty.tryReflectionSetAccessible=true","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.367371Z","level":"info","event":"spark.hadoop.fs.s3a.vectored.read.max.merged.size = 2M","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.679504Z","level":"info","event":"spark.jars = /opt/spark/jars/hadoop-aws-3.4.1.jar,/opt/spark/jars/aws-java-sdk-core-2.20.158.jar,/opt/spark/jars/aws-java-sdk-auth-2.20.158.jar,/opt/spark/jars/aws-java-sdk-s3-2.20.158.jar,/opt/spark/jars/aws-java-sdk-utils-2.20.158.jar,/opt/spark/jars/aws-java-sdk-awscore-2.20.158.jar,/opt/spark/jars/aws-http-client-spi-2.20.158.jar,/opt/spark/jars/aws-sdk-core-2.20.158.jar,/opt/spark/jars/ojdbc11.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.689649Z","level":"info","event":"spark.hadoop.fs.s3a.impl = org.apache.hadoop.fs.s3a.S3AFileSystem","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.690182Z","level":"info","event":"spark.app.id = local-1752250440741","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.690568Z","level":"info","event":"spark.hadoop.fs.s3a.secret.key = admin12345","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.690881Z","level":"info","event":"spark.sql.warehouse.dir = file:/opt/airflow/spark-warehouse","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:09.691495Z","level":"info","event":"Spark session finished.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:10.036725","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-11T16:14:10.139161Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:10.139679Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T16:14:10.139998Z","level":"info","event":"Task operator:<Task(PythonOperator): install_spark>","chan":"stdout","logger":"task"}
