{"timestamp":"2025-07-11T20:36:38.977437","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-11T20:36:38.979040","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-11T20:36:39.549857Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:41.621854Z","level":"error","event":"25/07/11 20:36:41 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:41.881704Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:41.882261Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:41.882498Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.028612Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.028996Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.029178Z","level":"info","event":"Current task name:etl_data_weather.load","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.029450Z","level":"info","event":"Dag name:etl_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.029651Z","level":"info","event":"extract data from file","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.055579Z","level":"info","event":"spark.hadoop.fs.s3a.connection.part.upload.timeout = 60000","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.055962Z","level":"info","event":"spark.hadoop.fs.s3a.socket.recv.buffer = 65536","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.056208Z","level":"info","event":"spark.hadoop.fs.s3a.impl.disable.cache = true","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.056416Z","level":"info","event":"spark.hadoop.fs.s3a.connection.request.timeout = 60000","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.056618Z","level":"info","event":"spark.app.startTime = 1752266202216","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.056843Z","level":"info","event":"spark.hadoop.fs.s3a.path.style.access = true","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.057032Z","level":"info","event":"spark.rdd.compress = True","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.057245Z","level":"info","event":"spark.hadoop.fs.s3a.connection.idle.time = 60000","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.057438Z","level":"info","event":"spark.app.id = local-1752266203047","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.057624Z","level":"info","event":"spark.executor.extraClassPath = /opt/spark/jars/ojdbc11.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.057809Z","level":"info","event":"spark.hadoop.fs.s3a.connection.establish.timeout = 5000","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.058015Z","level":"info","event":"spark.hadoop.fs.s3a.access.key = admin","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.058197Z","level":"info","event":"spark.hadoop.fs.s3a.endpoint = http://minio:9000/","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.058381Z","level":"info","event":"spark.app.initial.jar.urls = spark://b24b73b29495:38967/jars/aws-java-sdk-bundle-1.12.787.jar,spark://b24b73b29495:38967/jars/hadoop-aws-3.3.6.jar,spark://b24b73b29495:38967/jars/ojdbc11.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.058733Z","level":"info","event":"spark.hadoop.fs.s3a.retry.interval = 500","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.059068Z","level":"info","event":"spark.jars = /opt/spark/jars/hadoop-aws-3.3.6.jar,/opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar,/opt/spark/jars/ojdbc11.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.059374Z","level":"info","event":"spark.hadoop.fs.s3a.connection.maximum = 15","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.059626Z","level":"info","event":"spark.hadoop.fs.s3a.retry.limit = 5","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.059933Z","level":"info","event":"spark.hadoop.fs.s3a.vectored.read.max.merged.size = 2097152","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.060208Z","level":"info","event":"spark.hadoop.fs.s3a.impl = org.apache.hadoop.fs.s3a.S3AFileSystem","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.060467Z","level":"info","event":"spark.hadoop.fs.s3a.vectored.read.min.seek.size = 131072","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.060658Z","level":"info","event":"spark.hadoop.fs.s3a.secret.key = admin12345","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.060869Z","level":"info","event":"spark.sql.adaptive.coalescePartitions.enabled = false","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.061156Z","level":"info","event":"spark.driver.port = 38967","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.061367Z","level":"info","event":"spark.driver.host = b24b73b29495","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.061543Z","level":"info","event":"spark.hadoop.fs.s3a.socket.send.buffer = 65536","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.061710Z","level":"info","event":"spark.hadoop.fs.s3a.fast.upload = true","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.061883Z","level":"info","event":"spark.executor.extraJavaOptions = -Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-modules=jdk.incubator.vector --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false -Dio.netty.tryReflectionSetAccessible=true","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.062058Z","level":"info","event":"spark.sql.artifact.isolation.enabled = false","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.062251Z","level":"info","event":"spark.hadoop.fs.s3a.multipart.size = 104857600","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.062430Z","level":"info","event":"spark.master = local[*]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.062674Z","level":"info","event":"spark.executor.id = driver","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.062857Z","level":"info","event":"spark.driver.extraClassPath = /opt/spark/jars/ojdbc11.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.063034Z","level":"info","event":"spark.app.name = BAITEST","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.063267Z","level":"info","event":"spark.submit.deployMode = client","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.063592Z","level":"info","event":"spark.hadoop.fs.s3a.connection.ssl.enabled = false","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.063836Z","level":"info","event":"spark.serializer.objectStreamReset = 100","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.064025Z","level":"info","event":"spark.ui.showConsoleProgress = true","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.064209Z","level":"info","event":"spark.hadoop.fs.s3a.multipart.purge.age = 86400","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.064453Z","level":"info","event":"spark.hadoop.fs.s3a.threads.max = 10","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.064758Z","level":"info","event":"spark.hadoop.fs.s3a.aws.credentials.provider = org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.065028Z","level":"info","event":"spark.submit.pyFiles =","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.065242Z","level":"info","event":"spark.driver.extraJavaOptions = -Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-modules=jdk.incubator.vector --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false -Dio.netty.tryReflectionSetAccessible=true","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.065440Z","level":"info","event":"spark.hadoop.fs.s3a.attempts.maximum = 3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.065631Z","level":"info","event":"spark.app.submitTime = 1752266201755","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.065850Z","level":"info","event":"spark.hadoop.fs.s3a.threads.keepalivetime = 60000","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.066034Z","level":"info","event":"spark.repl.local.jars = file:///opt/spark/jars/hadoop-aws-3.3.6.jar,file:///opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar,file:///opt/spark/jars/ojdbc11.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.066196Z","level":"info","event":"spark.sql.adaptive.enabled = false","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:47.066344Z","level":"info","event":"spark.hadoop.fs.s3a.connection.timeout = 60000","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.340309Z","level":"error","event":"25/07/11 20:36:48 WARN MetricsConfig: Cannot locate configuration: tried hadoop-metrics2-s3a-file-system.properties,hadoop-metrics2.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.439859Z","level":"error","event":"25/07/11 20:36:48 WARN VersionInfoUtils: The AWS SDK for Java 1.x entered maintenance mode starting July 31, 2024 and will reach end of support on December 31, 2025. For more information, see https://aws.amazon.com/blogs/developer/the-aws-sdk-for-java-1-x-is-in-maintenance-mode-effective-july-31-2024/","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.440390Z","level":"error","event":"You can print where on the file system the AWS SDK for Java 1.x core runtime is located by setting the AWS_JAVA_V1_PRINT_LOCATION environment variable or aws.java.v1.printLocation system property to 'true'.","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.440742Z","level":"error","event":"This message can be disabled by setting the AWS_JAVA_V1_DISABLE_DEPRECATION_ANNOUNCEMENT environment variable or aws.java.v1.disableDeprecationAnnouncement system property to 'true'.","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.441119Z","level":"error","event":"The AWS SDK for Java 1.x is being used here:","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.441438Z","level":"error","event":"at java.base/java.lang.Thread.getStackTrace(Thread.java:1619)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.441654Z","level":"error","event":"at com.amazonaws.util.VersionInfoUtils.printDeprecationAnnouncement(VersionInfoUtils.java:81)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.441911Z","level":"error","event":"at com.amazonaws.util.VersionInfoUtils.<clinit>(VersionInfoUtils.java:59)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.442135Z","level":"error","event":"at com.amazonaws.ClientConfiguration.<clinit>(ClientConfiguration.java:95)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.442379Z","level":"error","event":"at org.apache.hadoop.fs.s3a.S3AUtils.createAwsConf(S3AUtils.java:1251)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.442608Z","level":"error","event":"at org.apache.hadoop.fs.s3a.DefaultS3ClientFactory.createS3Client(DefaultS3ClientFactory.java:118)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.442829Z","level":"error","event":"at org.apache.hadoop.fs.s3a.S3AFileSystem.bindAWSClient(S3AFileSystem.java:982)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.443056Z","level":"error","event":"at org.apache.hadoop.fs.s3a.S3AFileSystem.initialize(S3AFileSystem.java:586)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.443257Z","level":"error","event":"at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3615)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.443433Z","level":"error","event":"at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:554)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.443618Z","level":"error","event":"at org.apache.hadoop.fs.Path.getFileSystem(Path.java:366)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.443807Z","level":"error","event":"at org.apache.spark.sql.execution.streaming.FileStreamSink$.hasMetadata(FileStreamSink.scala:55)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.444012Z","level":"error","event":"at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:381)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.444217Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.ResolveDataSource.org$apache$spark$sql$catalyst$analysis$ResolveDataSource$$loadV1BatchSource(ResolveDataSource.scala:143)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.444498Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.ResolveDataSource$$anonfun$apply$1.$anonfun$applyOrElse$2(ResolveDataSource.scala:61)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.444743Z","level":"error","event":"at scala.Option.getOrElse(Option.scala:201)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.445015Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.ResolveDataSource$$anonfun$apply$1.applyOrElse(ResolveDataSource.scala:61)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.445316Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.ResolveDataSource$$anonfun$apply$1.applyOrElse(ResolveDataSource.scala:45)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.445637Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.$anonfun$resolveOperatorsUpWithPruning$3(AnalysisHelper.scala:139)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.446060Z","level":"error","event":"at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.446530Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.$anonfun$resolveOperatorsUpWithPruning$1(AnalysisHelper.scala:139)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.446933Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.allowInvokingTransformsInAnalyzer(AnalysisHelper.scala:416)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.447159Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsUpWithPruning(AnalysisHelper.scala:135)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.447354Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsUpWithPruning$(AnalysisHelper.scala:131)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.447543Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperatorsUpWithPruning(LogicalPlan.scala:37)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.447708Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsUp(AnalysisHelper.scala:112)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.447876Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsUp$(AnalysisHelper.scala:111)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.448037Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperatorsUp(LogicalPlan.scala:37)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.448250Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.ResolveDataSource.apply(ResolveDataSource.scala:45)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.448639Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.ResolveDataSource.apply(ResolveDataSource.scala:43)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.448945Z","level":"error","event":"at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$execute$2(RuleExecutor.scala:242)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.449255Z","level":"error","event":"at scala.collection.LinearSeqOps.foldLeft(LinearSeq.scala:183)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.449607Z","level":"error","event":"at scala.collection.LinearSeqOps.foldLeft$(LinearSeq.scala:179)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.449940Z","level":"error","event":"at scala.collection.immutable.List.foldLeft(List.scala:79)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.450278Z","level":"error","event":"at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$execute$1(RuleExecutor.scala:239)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.450654Z","level":"error","event":"at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$execute$1$adapted(RuleExecutor.scala:231)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.450927Z","level":"error","event":"at scala.collection.immutable.List.foreach(List.scala:334)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.451346Z","level":"error","event":"at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:231)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.451618Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.Analyzer.org$apache$spark$sql$catalyst$analysis$Analyzer$$executeSameContext(Analyzer.scala:290)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.451906Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.Analyzer.$anonfun$execute$1(Analyzer.scala:286)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.452206Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.AnalysisContext$.withNewAnalysisContext(Analyzer.scala:234)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.452637Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.Analyzer.execute(Analyzer.scala:286)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.452980Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.Analyzer.execute(Analyzer.scala:249)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.453218Z","level":"error","event":"at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$executeAndTrack$1(RuleExecutor.scala:201)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.453445Z","level":"error","event":"at org.apache.spark.sql.catalyst.QueryPlanningTracker$.withTracker(QueryPlanningTracker.scala:89)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.453741Z","level":"error","event":"at org.apache.spark.sql.catalyst.rules.RuleExecutor.executeAndTrack(RuleExecutor.scala:201)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.454056Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.resolver.HybridAnalyzer.resolveInFixedPoint(HybridAnalyzer.scala:190)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.454459Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.resolver.HybridAnalyzer.$anonfun$apply$1(HybridAnalyzer.scala:76)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.454853Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.resolver.HybridAnalyzer.withTrackedAnalyzerBridgeState(HybridAnalyzer.scala:111)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.455171Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.resolver.HybridAnalyzer.apply(HybridAnalyzer.scala:71)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.455505Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.Analyzer.$anonfun$executeAndCheck$1(Analyzer.scala:280)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.455832Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.markInAnalyzer(AnalysisHelper.scala:423)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.456116Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.Analyzer.executeAndCheck(Analyzer.scala:280)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.456452Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyAnalyzed$2(QueryExecution.scala:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.456716Z","level":"error","event":"at org.apache.spark.sql.catalyst.QueryPlanningTracker.measurePhase(QueryPlanningTracker.scala:148)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.456908Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.$anonfun$executePhase$2(QueryExecution.scala:278)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.457127Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.457329Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.$anonfun$executePhase$1(QueryExecution.scala:278)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.457540Z","level":"error","event":"at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.457798Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.executePhase(QueryExecution.scala:277)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.458002Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyAnalyzed$1(QueryExecution.scala:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.458298Z","level":"error","event":"at scala.util.Try$.apply(Try.scala:217)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.458566Z","level":"error","event":"at org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.458785Z","level":"error","event":"at org.apache.spark.util.LazyTry.tryT$lzycompute(LazyTry.scala:46)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.459051Z","level":"error","event":"at org.apache.spark.util.LazyTry.tryT(LazyTry.scala:46)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.459271Z","level":"error","event":"at org.apache.spark.util.LazyTry.get(LazyTry.scala:58)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.459655Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.analyzed(QueryExecution.scala:121)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.460004Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.assertAnalyzed(QueryExecution.scala:80)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.460331Z","level":"error","event":"at org.apache.spark.sql.classic.Dataset$.$anonfun$ofRows$1(Dataset.scala:115)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.460627Z","level":"error","event":"at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.460850Z","level":"error","event":"at org.apache.spark.sql.classic.Dataset$.ofRows(Dataset.scala:113)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.461066Z","level":"error","event":"at org.apache.spark.sql.classic.DataFrameReader.load(DataFrameReader.scala:109)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.461297Z","level":"error","event":"at org.apache.spark.sql.classic.DataFrameReader.load(DataFrameReader.scala:58)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.461528Z","level":"error","event":"at org.apache.spark.sql.DataFrameReader.json(DataFrameReader.scala:296)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.461735Z","level":"error","event":"at org.apache.spark.sql.classic.DataFrameReader.json(DataFrameReader.scala:150)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.461936Z","level":"error","event":"at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.462106Z","level":"error","event":"at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.462343Z","level":"error","event":"at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.462635Z","level":"error","event":"at java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.462940Z","level":"error","event":"at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.463166Z","level":"error","event":"at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.463427Z","level":"error","event":"at py4j.Gateway.invoke(Gateway.java:282)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.463761Z","level":"error","event":"at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.463938Z","level":"error","event":"at py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.464166Z","level":"error","event":"at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.464343Z","level":"error","event":"at py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:48.464534Z","level":"error","event":"at java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.747094Z","level":"info","event":"HELLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.765819Z","level":"info","event":"root","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.766404Z","level":"info","event":" |-- city: struct (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.766933Z","level":"info","event":" |    |-- coord: struct (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.767295Z","level":"info","event":" |    |    |-- lat: double (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.767631Z","level":"info","event":" |    |    |-- lon: double (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.768016Z","level":"info","event":" |    |-- country: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.768273Z","level":"info","event":" |    |-- id: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.768512Z","level":"info","event":" |    |-- name: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.768717Z","level":"info","event":" |    |-- population: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.768932Z","level":"info","event":" |    |-- sunrise: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.769125Z","level":"info","event":" |    |-- sunset: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.769322Z","level":"info","event":" |    |-- timezone: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.769526Z","level":"info","event":" |-- cnt: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.769748Z","level":"info","event":" |-- cod: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.770000Z","level":"info","event":" |-- list: array (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.770195Z","level":"info","event":" |    |-- element: struct (containsNull = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.770395Z","level":"info","event":" |    |    |-- clouds: struct (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.770577Z","level":"info","event":" |    |    |    |-- all: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.770799Z","level":"info","event":" |    |    |-- dt: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.771024Z","level":"info","event":" |    |    |-- dt_txt: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.771324Z","level":"info","event":" |    |    |-- main: struct (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.771685Z","level":"info","event":" |    |    |    |-- feels_like: double (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.771910Z","level":"info","event":" |    |    |    |-- grnd_level: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.772162Z","level":"info","event":" |    |    |    |-- humidity: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.772428Z","level":"info","event":" |    |    |    |-- pressure: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.772735Z","level":"info","event":" |    |    |    |-- sea_level: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.772944Z","level":"info","event":" |    |    |    |-- temp: double (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.773194Z","level":"info","event":" |    |    |    |-- temp_kf: double (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.773419Z","level":"info","event":" |    |    |    |-- temp_max: double (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.773846Z","level":"info","event":" |    |    |    |-- temp_min: double (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.774222Z","level":"info","event":" |    |    |-- pop: double (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.774474Z","level":"info","event":" |    |    |-- rain: struct (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.774712Z","level":"info","event":" |    |    |    |-- 3h: double (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.774930Z","level":"info","event":" |    |    |-- sys: struct (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.775146Z","level":"info","event":" |    |    |    |-- pod: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.775371Z","level":"info","event":" |    |    |-- visibility: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.775622Z","level":"info","event":" |    |    |-- weather: array (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.776264Z","level":"info","event":" |    |    |    |-- element: struct (containsNull = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.776647Z","level":"info","event":" |    |    |    |    |-- description: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.776937Z","level":"info","event":" |    |    |    |    |-- icon: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.777246Z","level":"info","event":" |    |    |    |    |-- id: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.777540Z","level":"info","event":" |    |    |    |    |-- main: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.777848Z","level":"info","event":" |    |    |-- wind: struct (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.778133Z","level":"info","event":" |    |    |    |-- deg: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.778421Z","level":"info","event":" |    |    |    |-- gust: double (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.778702Z","level":"info","event":" |    |    |    |-- speed: double (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.779054Z","level":"info","event":" |-- message: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:49.779383Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:51.967099Z","level":"info","event":"+--------------------+---+---+--------------------+-------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:51.967684Z","level":"info","event":"|                city|cnt|cod|                list|message|","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:51.968103Z","level":"info","event":"+--------------------+---+---+--------------------+-------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:51.968452Z","level":"info","event":"|{{21.0278, 105.83...| 40|200|[{{100}, 17521920...|      0|","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:51.968786Z","level":"info","event":"+--------------------+---+---+--------------------+-------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:51.969132Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:53.057937Z","level":"info","event":"+----------+-----------+--------+--------+-----------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:53.058441Z","level":"info","event":"|        dt|temperature|pressure|humidity|description|","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:53.058808Z","level":"info","event":"+----------+-----------+--------+--------+-----------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:53.059156Z","level":"info","event":"|1752192000|      26.72|     998|      89|    mưa vừa|","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:53.059472Z","level":"info","event":"|1752202800|      27.27|     999|      81|    mưa nhẹ|","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:53.059798Z","level":"info","event":"|1752213600|      30.07|     999|      67|    mưa vừa|","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:53.060132Z","level":"info","event":"|1752224400|      29.96|     998|      75|    mưa vừa|","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:53.060400Z","level":"info","event":"|1752235200|      26.19|    1000|      91|    mưa vừa|","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:53.060599Z","level":"info","event":"+----------+-----------+--------+--------+-----------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:53.060821Z","level":"info","event":"only showing top 5 rows","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:53.061063Z","level":"info","event":"HELLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOO25252525","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:53.061345Z","level":"info","event":"transform data","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:53.209757Z","level":"info","event":"load data","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:53.210491Z","level":"info","event":"(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=host.docker.internal)(PORT=1522))(CONNECT_DATA=(SID=XE)))","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:36:53.755148Z","level":"info","event":"Table `WEATHER` created successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.201633Z","level":"info","event":"An error occurred while calling o314.save.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.202154Z","level":"info","event":": java.sql.SQLRecoverableException: IO Error: The Network Adapter could not establish the connection (CONNECTION_ID=M1ibX5uSQru+MZncWtb5lQ==)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.202501Z","level":"info","event":"\tat oracle.jdbc.driver.T4CConnection.handleLogonNetException(T4CConnection.java:902)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.202790Z","level":"info","event":"\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:707)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.203054Z","level":"info","event":"\tat oracle.jdbc.driver.PhysicalConnection.connect(PhysicalConnection.java:1094)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.203309Z","level":"info","event":"\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:89)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.203540Z","level":"info","event":"\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:732)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.203797Z","level":"info","event":"\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:648)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.204030Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:50)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.204242Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.204459Z","level":"info","event":"\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:235)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.204657Z","level":"info","event":"\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:231)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.204862Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:51)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.205104Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:55)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.205343Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:79)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.205563Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.205786Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:88)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.206147Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$2(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.206359Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$8(SQLExecution.scala:162)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.206569Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withSessionTagsApplied(SQLExecution.scala:268)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.206793Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$7(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.207013Z","level":"info","event":"\tat org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.207268Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.$anonfun$withResources$1(ArtifactManager.scala:112)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.207505Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.withClassLoaderIfNeeded(ArtifactManager.scala:106)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.207742Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.withResources(ArtifactManager.scala:111)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.207956Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$6(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.208175Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:291)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.208391Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$1(SQLExecution.scala:123)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.208667Z","level":"info","event":"\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.208912Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId0(SQLExecution.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.209125Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:233)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.209374Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.209583Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.209776Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$eagerlyExecute$1(QueryExecution.scala:154)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.209985Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:169)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.210207Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.210453Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.210710Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.210935Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.211375Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.211726Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:360)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.211971Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:356)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.212241Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.212481Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.212708Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:446)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.212952Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.213182Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyCommandExecuted$1(QueryExecution.scala:126)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.213401Z","level":"info","event":"\tat scala.util.Try$.apply(Try.scala:217)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.213644Z","level":"info","event":"\tat org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.213901Z","level":"info","event":"\tat org.apache.spark.util.Utils$.getTryWithCallerStacktrace(Utils.scala:1439)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.214121Z","level":"info","event":"\tat org.apache.spark.util.LazyTry.get(LazyTry.scala:58)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.214366Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:131)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.214616Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:192)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.214917Z","level":"info","event":"\tat org.apache.spark.sql.classic.DataFrameWriter.runCommand(DataFrameWriter.scala:622)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.215171Z","level":"info","event":"\tat org.apache.spark.sql.classic.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:273)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.215414Z","level":"info","event":"\tat org.apache.spark.sql.classic.DataFrameWriter.saveInternal(DataFrameWriter.scala:241)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.215663Z","level":"info","event":"\tat org.apache.spark.sql.classic.DataFrameWriter.save(DataFrameWriter.scala:126)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.215921Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.216186Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.216421Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.216655Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.216928Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.217165Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.217420Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.217776Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.218094Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.218352Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.218586Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.218835Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.219073Z","level":"info","event":"\tSuppressed: org.apache.spark.util.Utils$OriginalTryStackTraceException: Full stacktrace of original doTryWithCallerStacktrace caller","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.219320Z","level":"info","event":"\t\tat oracle.jdbc.driver.T4CConnection.handleLogonNetException(T4CConnection.java:902)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.219617Z","level":"info","event":"\t\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:707)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.219907Z","level":"info","event":"\t\tat oracle.jdbc.driver.PhysicalConnection.connect(PhysicalConnection.java:1094)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.220165Z","level":"info","event":"\t\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:89)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.220425Z","level":"info","event":"\t\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:732)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.220690Z","level":"info","event":"\t\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:648)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.220956Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:50)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.221283Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.221530Z","level":"info","event":"\t\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:235)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.221786Z","level":"info","event":"\t\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:231)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.222052Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:51)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.222305Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:55)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.222713Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:79)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.222968Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.223215Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:88)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.223458Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$2(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.223813Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$8(SQLExecution.scala:162)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.224070Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.withSessionTagsApplied(SQLExecution.scala:268)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.224332Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$7(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.224612Z","level":"info","event":"\t\tat org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.224891Z","level":"info","event":"\t\tat org.apache.spark.sql.artifact.ArtifactManager.$anonfun$withResources$1(ArtifactManager.scala:112)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.225140Z","level":"info","event":"\t\tat org.apache.spark.sql.artifact.ArtifactManager.withClassLoaderIfNeeded(ArtifactManager.scala:106)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.225376Z","level":"info","event":"\t\tat org.apache.spark.sql.artifact.ArtifactManager.withResources(ArtifactManager.scala:111)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.225612Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$6(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.225902Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:291)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.226139Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$1(SQLExecution.scala:123)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.226408Z","level":"info","event":"\t\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.226655Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId0(SQLExecution.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.226930Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:233)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.227170Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.227393Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.227630Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$eagerlyExecute$1(QueryExecution.scala:154)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.227924Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:169)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.228150Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.228385Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.228605Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.228849Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.229074Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.229306Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:360)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.229540Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:356)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.229784Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.230038Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.230298Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:446)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.230540Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.230757Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyCommandExecuted$1(QueryExecution.scala:126)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.230995Z","level":"info","event":"\t\tat scala.util.Try$.apply(Try.scala:217)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.231337Z","level":"info","event":"\t\tat org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.231574Z","level":"info","event":"\t\tat org.apache.spark.util.LazyTry.tryT$lzycompute(LazyTry.scala:46)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.231795Z","level":"info","event":"\t\tat org.apache.spark.util.LazyTry.tryT(LazyTry.scala:46)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.232065Z","level":"info","event":"\t\t... 19 more","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.232361Z","level":"info","event":"Caused by: oracle.net.ns.NetException: The Network Adapter could not establish the connection (CONNECTION_ID=M1ibX5uSQru+MZncWtb5lQ==)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.232664Z","level":"info","event":"\tat oracle.net.nt.ConnStrategy.execute(ConnStrategy.java:715)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.233022Z","level":"info","event":"\tat oracle.net.resolver.AddrResolution.resolveAndExecute(AddrResolution.java:584)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.233251Z","level":"info","event":"\tat oracle.net.ns.NSProtocol.establishConnection(NSProtocol.java:964)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.233575Z","level":"info","event":"\tat oracle.net.ns.NSProtocol.connect(NSProtocol.java:350)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.233824Z","level":"info","event":"\tat oracle.jdbc.driver.T4CConnection.connect(T4CConnection.java:2627)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.234206Z","level":"info","event":"\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:666)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.234456Z","level":"info","event":"\tat oracle.jdbc.driver.PhysicalConnection.connect(PhysicalConnection.java:1094)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.234716Z","level":"info","event":"\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:89)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.234935Z","level":"info","event":"\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:732)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.235267Z","level":"info","event":"\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:648)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.235515Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:50)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.235792Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.236116Z","level":"info","event":"\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:235)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.236385Z","level":"info","event":"\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:231)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.236661Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:51)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.236941Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:55)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.237209Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:79)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.237476Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.237722Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:88)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.237982Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$2(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.238250Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$8(SQLExecution.scala:162)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.238491Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withSessionTagsApplied(SQLExecution.scala:268)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.238830Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$7(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.239114Z","level":"info","event":"\tat org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.239395Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.$anonfun$withResources$1(ArtifactManager.scala:112)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.239644Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.withClassLoaderIfNeeded(ArtifactManager.scala:106)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.239916Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.withResources(ArtifactManager.scala:111)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.240191Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$6(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.240437Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:291)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.240777Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$1(SQLExecution.scala:123)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.241259Z","level":"info","event":"\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.241538Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId0(SQLExecution.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.241852Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:233)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.242103Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.242339Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.242582Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$eagerlyExecute$1(QueryExecution.scala:154)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.242845Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:169)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.243096Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.243412Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.243734Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.244316Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.244637Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.244988Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:360)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.245382Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:356)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.245649Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.245978Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.246239Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:446)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.246473Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.246791Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyCommandExecuted$1(QueryExecution.scala:126)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.247024Z","level":"info","event":"\tat scala.util.Try$.apply(Try.scala:217)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.247268Z","level":"info","event":"\tat org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.247609Z","level":"info","event":"\tat org.apache.spark.util.LazyTry.tryT$lzycompute(LazyTry.scala:46)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.247908Z","level":"info","event":"\tat org.apache.spark.util.LazyTry.tryT(LazyTry.scala:46)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.248189Z","level":"info","event":"\t... 19 more","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.248454Z","level":"info","event":"Caused by: java.net.UnknownHostException: None: Temporary failure in name resolution","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.248719Z","level":"info","event":"\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.248962Z","level":"info","event":"\tat java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(InetAddress.java:934)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.249214Z","level":"info","event":"\tat java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1543)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.249665Z","level":"info","event":"\tat java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:852)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.249901Z","level":"info","event":"\tat java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1533)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.250121Z","level":"info","event":"\tat java.base/java.net.InetAddress.getAllByName(InetAddress.java:1385)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.250307Z","level":"info","event":"\tat java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.250504Z","level":"info","event":"\tat oracle.net.nt.TcpNTAdapter.resolveInetAddresses(TcpNTAdapter.java:581)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.250707Z","level":"info","event":"\tat oracle.net.nt.TcpNTAdapter.doLocalDNSLookupConnect(TcpNTAdapter.java:300)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.250978Z","level":"info","event":"\tat oracle.net.nt.TcpNTAdapter.connect(TcpNTAdapter.java:269)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.251267Z","level":"info","event":"\tat oracle.net.nt.ConnOption.connect(ConnOption.java:230)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.251514Z","level":"info","event":"\tat oracle.net.nt.ConnStrategy.executeConnOption(ConnStrategy.java:1014)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.251776Z","level":"info","event":"\tat oracle.net.nt.ConnStrategy.execute(ConnStrategy.java:673)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.252000Z","level":"info","event":"\t... 71 more","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.252233Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.442892","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling o314.save.\n: java.sql.SQLRecoverableException: IO Error: The Network Adapter could not establish the connection (CONNECTION_ID=M1ibX5uSQru+MZncWtb5lQ==)\n\tat oracle.jdbc.driver.T4CConnection.handleLogonNetException(T4CConnection.java:902)\n\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:707)\n\tat oracle.jdbc.driver.PhysicalConnection.connect(PhysicalConnection.java:1094)\n\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:89)\n\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:732)\n\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:648)\n\tat org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:50)\n\tat org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)\n\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:235)\n\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:231)\n\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:51)\n\tat org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:55)\n\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:79)\n\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:77)\n\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:88)\n\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$2(QueryExecution.scala:155)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$8(SQLExecution.scala:162)\n\tat org.apache.spark.sql.execution.SQLExecution$.withSessionTagsApplied(SQLExecution.scala:268)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$7(SQLExecution.scala:124)\n\tat org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)\n\tat org.apache.spark.sql.artifact.ArtifactManager.$anonfun$withResources$1(ArtifactManager.scala:112)\n\tat org.apache.spark.sql.artifact.ArtifactManager.withClassLoaderIfNeeded(ArtifactManager.scala:106)\n\tat org.apache.spark.sql.artifact.ArtifactManager.withResources(ArtifactManager.scala:111)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$6(SQLExecution.scala:124)\n\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:291)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$1(SQLExecution.scala:123)\n\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)\n\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId0(SQLExecution.scala:77)\n\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:233)\n\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:155)\n\tat org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)\n\tat org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$eagerlyExecute$1(QueryExecution.scala:154)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:169)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:164)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:470)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:470)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:37)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:360)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:356)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:446)\n\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:164)\n\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyCommandExecuted$1(QueryExecution.scala:126)\n\tat scala.util.Try$.apply(Try.scala:217)\n\tat org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)\n\tat org.apache.spark.util.Utils$.getTryWithCallerStacktrace(Utils.scala:1439)\n\tat org.apache.spark.util.LazyTry.get(LazyTry.scala:58)\n\tat org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:131)\n\tat org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:192)\n\tat org.apache.spark.sql.classic.DataFrameWriter.runCommand(DataFrameWriter.scala:622)\n\tat org.apache.spark.sql.classic.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:273)\n\tat org.apache.spark.sql.classic.DataFrameWriter.saveInternal(DataFrameWriter.scala:241)\n\tat org.apache.spark.sql.classic.DataFrameWriter.save(DataFrameWriter.scala:126)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n\tSuppressed: org.apache.spark.util.Utils$OriginalTryStackTraceException: Full stacktrace of original doTryWithCallerStacktrace caller\n\t\tat oracle.jdbc.driver.T4CConnection.handleLogonNetException(T4CConnection.java:902)\n\t\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:707)\n\t\tat oracle.jdbc.driver.PhysicalConnection.connect(PhysicalConnection.java:1094)\n\t\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:89)\n\t\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:732)\n\t\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:648)\n\t\tat org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:50)\n\t\tat org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)\n\t\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:235)\n\t\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:231)\n\t\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:51)\n\t\tat org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:55)\n\t\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:79)\n\t\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:77)\n\t\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:88)\n\t\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$2(QueryExecution.scala:155)\n\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$8(SQLExecution.scala:162)\n\t\tat org.apache.spark.sql.execution.SQLExecution$.withSessionTagsApplied(SQLExecution.scala:268)\n\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$7(SQLExecution.scala:124)\n\t\tat org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)\n\t\tat org.apache.spark.sql.artifact.ArtifactManager.$anonfun$withResources$1(ArtifactManager.scala:112)\n\t\tat org.apache.spark.sql.artifact.ArtifactManager.withClassLoaderIfNeeded(ArtifactManager.scala:106)\n\t\tat org.apache.spark.sql.artifact.ArtifactManager.withResources(ArtifactManager.scala:111)\n\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$6(SQLExecution.scala:124)\n\t\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:291)\n\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$1(SQLExecution.scala:123)\n\t\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)\n\t\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId0(SQLExecution.scala:77)\n\t\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:233)\n\t\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:155)\n\t\tat org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)\n\t\tat org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$eagerlyExecute$1(QueryExecution.scala:154)\n\t\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:169)\n\t\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:164)\n\t\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:470)\n\t\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)\n\t\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:470)\n\t\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:37)\n\t\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:360)\n\t\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:356)\n\t\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)\n\t\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)\n\t\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:446)\n\t\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:164)\n\t\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyCommandExecuted$1(QueryExecution.scala:126)\n\t\tat scala.util.Try$.apply(Try.scala:217)\n\t\tat org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)\n\t\tat org.apache.spark.util.LazyTry.tryT$lzycompute(LazyTry.scala:46)\n\t\tat org.apache.spark.util.LazyTry.tryT(LazyTry.scala:46)\n\t\t... 19 more\nCaused by: oracle.net.ns.NetException: The Network Adapter could not establish the connection (CONNECTION_ID=M1ibX5uSQru+MZncWtb5lQ==)\n\tat oracle.net.nt.ConnStrategy.execute(ConnStrategy.java:715)\n\tat oracle.net.resolver.AddrResolution.resolveAndExecute(AddrResolution.java:584)\n\tat oracle.net.ns.NSProtocol.establishConnection(NSProtocol.java:964)\n\tat oracle.net.ns.NSProtocol.connect(NSProtocol.java:350)\n\tat oracle.jdbc.driver.T4CConnection.connect(T4CConnection.java:2627)\n\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:666)\n\tat oracle.jdbc.driver.PhysicalConnection.connect(PhysicalConnection.java:1094)\n\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:89)\n\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:732)\n\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:648)\n\tat org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:50)\n\tat org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)\n\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:235)\n\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:231)\n\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:51)\n\tat org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:55)\n\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:79)\n\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:77)\n\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:88)\n\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$2(QueryExecution.scala:155)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$8(SQLExecution.scala:162)\n\tat org.apache.spark.sql.execution.SQLExecution$.withSessionTagsApplied(SQLExecution.scala:268)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$7(SQLExecution.scala:124)\n\tat org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)\n\tat org.apache.spark.sql.artifact.ArtifactManager.$anonfun$withResources$1(ArtifactManager.scala:112)\n\tat org.apache.spark.sql.artifact.ArtifactManager.withClassLoaderIfNeeded(ArtifactManager.scala:106)\n\tat org.apache.spark.sql.artifact.ArtifactManager.withResources(ArtifactManager.scala:111)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$6(SQLExecution.scala:124)\n\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:291)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$1(SQLExecution.scala:123)\n\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)\n\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId0(SQLExecution.scala:77)\n\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:233)\n\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:155)\n\tat org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)\n\tat org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$eagerlyExecute$1(QueryExecution.scala:154)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:169)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:164)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:470)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:470)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:37)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:360)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:356)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:446)\n\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:164)\n\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyCommandExecuted$1(QueryExecution.scala:126)\n\tat scala.util.Try$.apply(Try.scala:217)\n\tat org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)\n\tat org.apache.spark.util.LazyTry.tryT$lzycompute(LazyTry.scala:46)\n\tat org.apache.spark.util.LazyTry.tryT(LazyTry.scala:46)\n\t... 19 more\nCaused by: java.net.UnknownHostException: None: Temporary failure in name resolution\n\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\n\tat java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(InetAddress.java:934)\n\tat java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1543)\n\tat java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:852)\n\tat java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1533)\n\tat java.base/java.net.InetAddress.getAllByName(InetAddress.java:1385)\n\tat java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)\n\tat oracle.net.nt.TcpNTAdapter.resolveInetAddresses(TcpNTAdapter.java:581)\n\tat oracle.net.nt.TcpNTAdapter.doLocalDNSLookupConnect(TcpNTAdapter.java:300)\n\tat oracle.net.nt.TcpNTAdapter.connect(TcpNTAdapter.java:269)\n\tat oracle.net.nt.ConnOption.connect(ConnOption.java:230)\n\tat oracle.net.nt.ConnStrategy.executeConnOption(ConnStrategy.java:1014)\n\tat oracle.net.nt.ConnStrategy.execute(ConnStrategy.java:673)\n\t... 71 more\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":825,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1088,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":212,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":235,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/main.py","lineno":24,"name":"run_etl_weather"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":86,"name":"load_data_weather"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":84,"name":"write_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/readwriter.py","lineno":1743,"name":"save"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-07-11T20:37:02.503496Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.503856Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.504113Z","level":"info","event":"Task:<Task(PythonOperator): etl_data_weather.load>","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.551675Z","level":"info","event":"Failure caused by An error occurred while calling o314.save.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.552301Z","level":"info","event":": java.sql.SQLRecoverableException: IO Error: The Network Adapter could not establish the connection (CONNECTION_ID=M1ibX5uSQru+MZncWtb5lQ==)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.552699Z","level":"info","event":"\tat oracle.jdbc.driver.T4CConnection.handleLogonNetException(T4CConnection.java:902)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.552973Z","level":"info","event":"\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:707)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.553179Z","level":"info","event":"\tat oracle.jdbc.driver.PhysicalConnection.connect(PhysicalConnection.java:1094)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.553401Z","level":"info","event":"\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:89)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.553620Z","level":"info","event":"\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:732)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.553830Z","level":"info","event":"\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:648)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.554069Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:50)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.554303Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.554525Z","level":"info","event":"\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:235)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.554718Z","level":"info","event":"\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:231)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.554923Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:51)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.555119Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:55)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.555372Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:79)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.555606Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.555835Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:88)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.556051Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$2(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.556254Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$8(SQLExecution.scala:162)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.556467Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withSessionTagsApplied(SQLExecution.scala:268)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.556688Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$7(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.556916Z","level":"info","event":"\tat org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.557145Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.$anonfun$withResources$1(ArtifactManager.scala:112)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.557396Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.withClassLoaderIfNeeded(ArtifactManager.scala:106)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.557633Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.withResources(ArtifactManager.scala:111)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.557874Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$6(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.558102Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:291)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.558334Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$1(SQLExecution.scala:123)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.558572Z","level":"info","event":"\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.558771Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId0(SQLExecution.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.558992Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:233)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.559201Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.559400Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.559588Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$eagerlyExecute$1(QueryExecution.scala:154)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.559801Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:169)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.560073Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.560320Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.560591Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.560801Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.561043Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.561388Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:360)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.561596Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:356)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.561799Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.561994Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.562236Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:446)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.562444Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.562637Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyCommandExecuted$1(QueryExecution.scala:126)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.562796Z","level":"info","event":"\tat scala.util.Try$.apply(Try.scala:217)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.563005Z","level":"info","event":"\tat org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.563212Z","level":"info","event":"\tat org.apache.spark.util.Utils$.getTryWithCallerStacktrace(Utils.scala:1439)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.563414Z","level":"info","event":"\tat org.apache.spark.util.LazyTry.get(LazyTry.scala:58)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.563622Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:131)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.563823Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:192)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.564020Z","level":"info","event":"\tat org.apache.spark.sql.classic.DataFrameWriter.runCommand(DataFrameWriter.scala:622)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.564276Z","level":"info","event":"\tat org.apache.spark.sql.classic.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:273)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.564484Z","level":"info","event":"\tat org.apache.spark.sql.classic.DataFrameWriter.saveInternal(DataFrameWriter.scala:241)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.564682Z","level":"info","event":"\tat org.apache.spark.sql.classic.DataFrameWriter.save(DataFrameWriter.scala:126)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.564876Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.565067Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.565274Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.565476Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.565686Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.565933Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.566141Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.566345Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.566556Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.566737Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.566949Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.567141Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.567342Z","level":"info","event":"\tSuppressed: org.apache.spark.util.Utils$OriginalTryStackTraceException: Full stacktrace of original doTryWithCallerStacktrace caller","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.567541Z","level":"info","event":"\t\tat oracle.jdbc.driver.T4CConnection.handleLogonNetException(T4CConnection.java:902)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.567732Z","level":"info","event":"\t\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:707)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.567941Z","level":"info","event":"\t\tat oracle.jdbc.driver.PhysicalConnection.connect(PhysicalConnection.java:1094)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.568167Z","level":"info","event":"\t\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:89)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.568361Z","level":"info","event":"\t\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:732)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.568555Z","level":"info","event":"\t\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:648)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.568731Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:50)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.568924Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.569118Z","level":"info","event":"\t\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:235)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.569301Z","level":"info","event":"\t\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:231)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.569512Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:51)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.569716Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:55)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.569959Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:79)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.570179Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.570412Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:88)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.570643Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$2(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.570954Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$8(SQLExecution.scala:162)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.571174Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.withSessionTagsApplied(SQLExecution.scala:268)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.571357Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$7(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.571543Z","level":"info","event":"\t\tat org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.571708Z","level":"info","event":"\t\tat org.apache.spark.sql.artifact.ArtifactManager.$anonfun$withResources$1(ArtifactManager.scala:112)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.571871Z","level":"info","event":"\t\tat org.apache.spark.sql.artifact.ArtifactManager.withClassLoaderIfNeeded(ArtifactManager.scala:106)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.572046Z","level":"info","event":"\t\tat org.apache.spark.sql.artifact.ArtifactManager.withResources(ArtifactManager.scala:111)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.572248Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$6(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.572452Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:291)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.572665Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$1(SQLExecution.scala:123)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.572862Z","level":"info","event":"\t\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.573082Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId0(SQLExecution.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.573302Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:233)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.573490Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.573676Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.573865Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$eagerlyExecute$1(QueryExecution.scala:154)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.574064Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:169)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.574258Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.574449Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.574631Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.574804Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.574962Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.575149Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:360)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.575353Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:356)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.575523Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.575702Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.575879Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:446)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.576055Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.576228Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyCommandExecuted$1(QueryExecution.scala:126)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.576391Z","level":"info","event":"\t\tat scala.util.Try$.apply(Try.scala:217)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.576553Z","level":"info","event":"\t\tat org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.576732Z","level":"info","event":"\t\tat org.apache.spark.util.LazyTry.tryT$lzycompute(LazyTry.scala:46)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.576929Z","level":"info","event":"\t\tat org.apache.spark.util.LazyTry.tryT(LazyTry.scala:46)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.577131Z","level":"info","event":"\t\t... 19 more","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.577329Z","level":"info","event":"Caused by: oracle.net.ns.NetException: The Network Adapter could not establish the connection (CONNECTION_ID=M1ibX5uSQru+MZncWtb5lQ==)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.577503Z","level":"info","event":"\tat oracle.net.nt.ConnStrategy.execute(ConnStrategy.java:715)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.577691Z","level":"info","event":"\tat oracle.net.resolver.AddrResolution.resolveAndExecute(AddrResolution.java:584)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.577878Z","level":"info","event":"\tat oracle.net.ns.NSProtocol.establishConnection(NSProtocol.java:964)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.578047Z","level":"info","event":"\tat oracle.net.ns.NSProtocol.connect(NSProtocol.java:350)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.578206Z","level":"info","event":"\tat oracle.jdbc.driver.T4CConnection.connect(T4CConnection.java:2627)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.578374Z","level":"info","event":"\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:666)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.578552Z","level":"info","event":"\tat oracle.jdbc.driver.PhysicalConnection.connect(PhysicalConnection.java:1094)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.578748Z","level":"info","event":"\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:89)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.578936Z","level":"info","event":"\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:732)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.579210Z","level":"info","event":"\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:648)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.579420Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:50)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.579609Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.579788Z","level":"info","event":"\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:235)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.579972Z","level":"info","event":"\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:231)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.580158Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:51)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.580340Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:55)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.580509Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:79)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.580714Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.581005Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:88)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.581307Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$2(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.581575Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$8(SQLExecution.scala:162)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.581834Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withSessionTagsApplied(SQLExecution.scala:268)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.582077Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$7(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.582323Z","level":"info","event":"\tat org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.582572Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.$anonfun$withResources$1(ArtifactManager.scala:112)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.582806Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.withClassLoaderIfNeeded(ArtifactManager.scala:106)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.583023Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.withResources(ArtifactManager.scala:111)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.583224Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$6(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.583445Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:291)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.583678Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$1(SQLExecution.scala:123)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.583961Z","level":"info","event":"\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.584189Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId0(SQLExecution.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.584418Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:233)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.584639Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.584870Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.585112Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$eagerlyExecute$1(QueryExecution.scala:154)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.585345Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:169)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.585598Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.585812Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.586150Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.586429Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.586636Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.586851Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:360)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.587066Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:356)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.587273Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.587472Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.587682Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:446)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.587874Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.588245Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyCommandExecuted$1(QueryExecution.scala:126)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.588463Z","level":"info","event":"\tat scala.util.Try$.apply(Try.scala:217)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.588670Z","level":"info","event":"\tat org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.588879Z","level":"info","event":"\tat org.apache.spark.util.LazyTry.tryT$lzycompute(LazyTry.scala:46)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.589105Z","level":"info","event":"\tat org.apache.spark.util.LazyTry.tryT(LazyTry.scala:46)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.589337Z","level":"info","event":"\t... 19 more","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.589552Z","level":"info","event":"Caused by: java.net.UnknownHostException: None: Temporary failure in name resolution","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.589744Z","level":"info","event":"\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.589967Z","level":"info","event":"\tat java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(InetAddress.java:934)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.590163Z","level":"info","event":"\tat java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1543)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.590348Z","level":"info","event":"\tat java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:852)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.590551Z","level":"info","event":"\tat java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1533)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.590741Z","level":"info","event":"\tat java.base/java.net.InetAddress.getAllByName(InetAddress.java:1385)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.590949Z","level":"info","event":"\tat java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.591189Z","level":"info","event":"\tat oracle.net.nt.TcpNTAdapter.resolveInetAddresses(TcpNTAdapter.java:581)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.591404Z","level":"info","event":"\tat oracle.net.nt.TcpNTAdapter.doLocalDNSLookupConnect(TcpNTAdapter.java:300)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.591637Z","level":"info","event":"\tat oracle.net.nt.TcpNTAdapter.connect(TcpNTAdapter.java:269)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.591859Z","level":"info","event":"\tat oracle.net.nt.ConnOption.connect(ConnOption.java:230)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.592061Z","level":"info","event":"\tat oracle.net.nt.ConnStrategy.executeConnOption(ConnStrategy.java:1014)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.592274Z","level":"info","event":"\tat oracle.net.nt.ConnStrategy.execute(ConnStrategy.java:673)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.592480Z","level":"info","event":"\t... 71 more","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T20:37:02.592727Z","level":"info","event":"","chan":"stdout","logger":"task"}
