{"timestamp":"2025-07-11T17:59:36.777952","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-11T17:59:36.779882","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-11T17:59:37.433475Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:39.759882Z","level":"error","event":"25/07/11 17:59:39 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:40.093849Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:40.094872Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:40.095362Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.859207Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.859855Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.860261Z","level":"info","event":"Current task name:etl_data_weather.load","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.860797Z","level":"info","event":"Dag name:etl_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.862092Z","level":"info","event":"extract data from file","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.935246Z","level":"info","event":"spark.hadoop.fs.s3a.connection.part.upload.timeout = 60000","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.935780Z","level":"info","event":"spark.hadoop.fs.s3a.socket.recv.buffer = 65536","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.936312Z","level":"info","event":"spark.hadoop.fs.s3a.impl.disable.cache = true","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.936694Z","level":"info","event":"spark.driver.port = 37027","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.937021Z","level":"info","event":"spark.hadoop.fs.s3a.connection.request.timeout = 60000","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.937338Z","level":"info","event":"spark.hadoop.fs.s3a.path.style.access = true","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.937625Z","level":"info","event":"spark.rdd.compress = True","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.937953Z","level":"info","event":"spark.hadoop.fs.s3a.connection.idle.time = 60000","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.938238Z","level":"info","event":"spark.executor.extraClassPath = /opt/spark/jars/ojdbc11.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.938499Z","level":"info","event":"spark.driver.host = 8344c87913bd","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.938757Z","level":"info","event":"spark.hadoop.fs.s3a.connection.establish.timeout = 5000","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.939046Z","level":"info","event":"spark.hadoop.fs.s3a.access.key = admin","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.939273Z","level":"info","event":"spark.hadoop.fs.s3a.endpoint = http://minio:9000/","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.939558Z","level":"info","event":"spark.app.id = local-1752256781803","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.939790Z","level":"info","event":"spark.hadoop.fs.s3a.retry.interval = 500","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.940195Z","level":"info","event":"spark.jars = /opt/spark/jars/hadoop-aws-3.3.6.jar,/opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar,/opt/spark/jars/ojdbc11.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.940567Z","level":"info","event":"spark.hadoop.fs.s3a.connection.maximum = 15","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.940818Z","level":"info","event":"spark.hadoop.fs.s3a.retry.limit = 5","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.941051Z","level":"info","event":"spark.hadoop.fs.s3a.vectored.read.max.merged.size = 2097152","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.941317Z","level":"info","event":"spark.hadoop.fs.s3a.impl = org.apache.hadoop.fs.s3a.S3AFileSystem","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.941680Z","level":"info","event":"spark.hadoop.fs.s3a.vectored.read.min.seek.size = 131072","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.941910Z","level":"info","event":"spark.hadoop.fs.s3a.secret.key = admin12345","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.942142Z","level":"info","event":"spark.sql.adaptive.coalescePartitions.enabled = false","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.942408Z","level":"info","event":"spark.hadoop.fs.s3a.socket.send.buffer = 65536","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.942701Z","level":"info","event":"spark.app.submitTime = 1752256779953","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.942955Z","level":"info","event":"spark.hadoop.fs.s3a.fast.upload = true","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.943214Z","level":"info","event":"spark.executor.extraJavaOptions = -Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-modules=jdk.incubator.vector --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false -Dio.netty.tryReflectionSetAccessible=true","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.943462Z","level":"info","event":"spark.sql.artifact.isolation.enabled = false","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.943713Z","level":"info","event":"spark.hadoop.fs.s3a.multipart.size = 104857600","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.943956Z","level":"info","event":"spark.app.initial.jar.urls = spark://8344c87913bd:37027/jars/aws-java-sdk-bundle-1.12.787.jar,spark://8344c87913bd:37027/jars/hadoop-aws-3.3.6.jar,spark://8344c87913bd:37027/jars/ojdbc11.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.944461Z","level":"info","event":"spark.master = local[*]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.944900Z","level":"info","event":"spark.executor.id = driver","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.945227Z","level":"info","event":"spark.driver.extraClassPath = /opt/spark/jars/ojdbc11.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.945509Z","level":"info","event":"spark.app.name = BAITEST","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.945776Z","level":"info","event":"spark.submit.deployMode = client","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.946044Z","level":"info","event":"spark.hadoop.fs.s3a.connection.ssl.enabled = false","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.946341Z","level":"info","event":"spark.serializer.objectStreamReset = 100","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.946600Z","level":"info","event":"spark.app.startTime = 1752256780442","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.946860Z","level":"info","event":"spark.ui.showConsoleProgress = true","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.947131Z","level":"info","event":"spark.hadoop.fs.s3a.multipart.purge.age = 86400","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.947376Z","level":"info","event":"spark.hadoop.fs.s3a.threads.max = 10","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.947620Z","level":"info","event":"spark.hadoop.fs.s3a.aws.credentials.provider = org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.947877Z","level":"info","event":"spark.submit.pyFiles =","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.948110Z","level":"info","event":"spark.driver.extraJavaOptions = -Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-modules=jdk.incubator.vector --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false -Dio.netty.tryReflectionSetAccessible=true","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.948426Z","level":"info","event":"spark.hadoop.fs.s3a.attempts.maximum = 3","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.948662Z","level":"info","event":"spark.hadoop.fs.s3a.threads.keepalivetime = 60000","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.948910Z","level":"info","event":"spark.repl.local.jars = file:///opt/spark/jars/hadoop-aws-3.3.6.jar,file:///opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar,file:///opt/spark/jars/ojdbc11.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.949140Z","level":"info","event":"spark.sql.adaptive.enabled = false","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:48.949380Z","level":"info","event":"spark.hadoop.fs.s3a.connection.timeout = 60000","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.264179Z","level":"error","event":"25/07/11 17:59:50 WARN MetricsConfig: Cannot locate configuration: tried hadoop-metrics2-s3a-file-system.properties,hadoop-metrics2.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.376447Z","level":"error","event":"25/07/11 17:59:50 WARN VersionInfoUtils: The AWS SDK for Java 1.x entered maintenance mode starting July 31, 2024 and will reach end of support on December 31, 2025. For more information, see https://aws.amazon.com/blogs/developer/the-aws-sdk-for-java-1-x-is-in-maintenance-mode-effective-july-31-2024/","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.377132Z","level":"error","event":"You can print where on the file system the AWS SDK for Java 1.x core runtime is located by setting the AWS_JAVA_V1_PRINT_LOCATION environment variable or aws.java.v1.printLocation system property to 'true'.","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.377730Z","level":"error","event":"This message can be disabled by setting the AWS_JAVA_V1_DISABLE_DEPRECATION_ANNOUNCEMENT environment variable or aws.java.v1.disableDeprecationAnnouncement system property to 'true'.","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.378101Z","level":"error","event":"The AWS SDK for Java 1.x is being used here:","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.378420Z","level":"error","event":"at java.base/java.lang.Thread.getStackTrace(Thread.java:1619)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.378702Z","level":"error","event":"at com.amazonaws.util.VersionInfoUtils.printDeprecationAnnouncement(VersionInfoUtils.java:81)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.378980Z","level":"error","event":"at com.amazonaws.util.VersionInfoUtils.<clinit>(VersionInfoUtils.java:59)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.379199Z","level":"error","event":"at com.amazonaws.ClientConfiguration.<clinit>(ClientConfiguration.java:95)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.379411Z","level":"error","event":"at org.apache.hadoop.fs.s3a.S3AUtils.createAwsConf(S3AUtils.java:1251)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.379628Z","level":"error","event":"at org.apache.hadoop.fs.s3a.DefaultS3ClientFactory.createS3Client(DefaultS3ClientFactory.java:118)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.379856Z","level":"error","event":"at org.apache.hadoop.fs.s3a.S3AFileSystem.bindAWSClient(S3AFileSystem.java:982)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.380084Z","level":"error","event":"at org.apache.hadoop.fs.s3a.S3AFileSystem.initialize(S3AFileSystem.java:586)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.380281Z","level":"error","event":"at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3615)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.380473Z","level":"error","event":"at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:554)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.380684Z","level":"error","event":"at org.apache.hadoop.fs.Path.getFileSystem(Path.java:366)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.380890Z","level":"error","event":"at org.apache.spark.sql.execution.streaming.FileStreamSink$.hasMetadata(FileStreamSink.scala:55)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.381091Z","level":"error","event":"at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:381)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.381278Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.ResolveDataSource.org$apache$spark$sql$catalyst$analysis$ResolveDataSource$$loadV1BatchSource(ResolveDataSource.scala:143)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.381464Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.ResolveDataSource$$anonfun$apply$1.$anonfun$applyOrElse$2(ResolveDataSource.scala:61)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.381673Z","level":"error","event":"at scala.Option.getOrElse(Option.scala:201)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.381854Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.ResolveDataSource$$anonfun$apply$1.applyOrElse(ResolveDataSource.scala:61)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.382060Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.ResolveDataSource$$anonfun$apply$1.applyOrElse(ResolveDataSource.scala:45)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.382247Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.$anonfun$resolveOperatorsUpWithPruning$3(AnalysisHelper.scala:139)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.382443Z","level":"error","event":"at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.382760Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.$anonfun$resolveOperatorsUpWithPruning$1(AnalysisHelper.scala:139)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.382943Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.allowInvokingTransformsInAnalyzer(AnalysisHelper.scala:416)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.383152Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsUpWithPruning(AnalysisHelper.scala:135)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.383364Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsUpWithPruning$(AnalysisHelper.scala:131)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.383568Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperatorsUpWithPruning(LogicalPlan.scala:37)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.383827Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsUp(AnalysisHelper.scala:112)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.384040Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsUp$(AnalysisHelper.scala:111)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.384243Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperatorsUp(LogicalPlan.scala:37)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.384441Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.ResolveDataSource.apply(ResolveDataSource.scala:45)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.384641Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.ResolveDataSource.apply(ResolveDataSource.scala:43)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.384841Z","level":"error","event":"at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$execute$2(RuleExecutor.scala:242)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.385019Z","level":"error","event":"at scala.collection.LinearSeqOps.foldLeft(LinearSeq.scala:183)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.385225Z","level":"error","event":"at scala.collection.LinearSeqOps.foldLeft$(LinearSeq.scala:179)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.385402Z","level":"error","event":"at scala.collection.immutable.List.foldLeft(List.scala:79)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.385609Z","level":"error","event":"at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$execute$1(RuleExecutor.scala:239)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.386038Z","level":"error","event":"at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$execute$1$adapted(RuleExecutor.scala:231)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.386425Z","level":"error","event":"at scala.collection.immutable.List.foreach(List.scala:334)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.386877Z","level":"error","event":"at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:231)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.387110Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.Analyzer.org$apache$spark$sql$catalyst$analysis$Analyzer$$executeSameContext(Analyzer.scala:290)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.387340Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.Analyzer.$anonfun$execute$1(Analyzer.scala:286)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.387532Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.AnalysisContext$.withNewAnalysisContext(Analyzer.scala:234)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.387769Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.Analyzer.execute(Analyzer.scala:286)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.388011Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.Analyzer.execute(Analyzer.scala:249)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.388206Z","level":"error","event":"at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$executeAndTrack$1(RuleExecutor.scala:201)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.388399Z","level":"error","event":"at org.apache.spark.sql.catalyst.QueryPlanningTracker$.withTracker(QueryPlanningTracker.scala:89)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.388583Z","level":"error","event":"at org.apache.spark.sql.catalyst.rules.RuleExecutor.executeAndTrack(RuleExecutor.scala:201)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.388768Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.resolver.HybridAnalyzer.resolveInFixedPoint(HybridAnalyzer.scala:190)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.388966Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.resolver.HybridAnalyzer.$anonfun$apply$1(HybridAnalyzer.scala:76)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.389159Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.resolver.HybridAnalyzer.withTrackedAnalyzerBridgeState(HybridAnalyzer.scala:111)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.389341Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.resolver.HybridAnalyzer.apply(HybridAnalyzer.scala:71)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.389558Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.Analyzer.$anonfun$executeAndCheck$1(Analyzer.scala:280)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.389819Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.markInAnalyzer(AnalysisHelper.scala:423)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.390030Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.Analyzer.executeAndCheck(Analyzer.scala:280)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.390227Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyAnalyzed$2(QueryExecution.scala:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.390450Z","level":"error","event":"at org.apache.spark.sql.catalyst.QueryPlanningTracker.measurePhase(QueryPlanningTracker.scala:148)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.390677Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.$anonfun$executePhase$2(QueryExecution.scala:278)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.390874Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.391078Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.$anonfun$executePhase$1(QueryExecution.scala:278)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.391331Z","level":"error","event":"at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.391552Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.executePhase(QueryExecution.scala:277)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.391753Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyAnalyzed$1(QueryExecution.scala:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.391950Z","level":"error","event":"at scala.util.Try$.apply(Try.scala:217)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.392193Z","level":"error","event":"at org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.392388Z","level":"error","event":"at org.apache.spark.util.LazyTry.tryT$lzycompute(LazyTry.scala:46)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.392584Z","level":"error","event":"at org.apache.spark.util.LazyTry.tryT(LazyTry.scala:46)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.392811Z","level":"error","event":"at org.apache.spark.util.LazyTry.get(LazyTry.scala:58)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.392986Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.analyzed(QueryExecution.scala:121)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.393220Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.assertAnalyzed(QueryExecution.scala:80)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.393429Z","level":"error","event":"at org.apache.spark.sql.classic.Dataset$.$anonfun$ofRows$1(Dataset.scala:115)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.393617Z","level":"error","event":"at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.393824Z","level":"error","event":"at org.apache.spark.sql.classic.Dataset$.ofRows(Dataset.scala:113)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.394018Z","level":"error","event":"at org.apache.spark.sql.classic.DataFrameReader.load(DataFrameReader.scala:109)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.394382Z","level":"error","event":"at org.apache.spark.sql.classic.DataFrameReader.load(DataFrameReader.scala:58)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.398376Z","level":"error","event":"at org.apache.spark.sql.DataFrameReader.json(DataFrameReader.scala:296)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.398759Z","level":"error","event":"at org.apache.spark.sql.classic.DataFrameReader.json(DataFrameReader.scala:150)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.399062Z","level":"error","event":"at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.399337Z","level":"error","event":"at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.399566Z","level":"error","event":"at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.399862Z","level":"error","event":"at java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.400110Z","level":"error","event":"at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.400334Z","level":"error","event":"at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.400577Z","level":"error","event":"at py4j.Gateway.invoke(Gateway.java:282)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.400788Z","level":"error","event":"at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.400994Z","level":"error","event":"at py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.401257Z","level":"error","event":"at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.401470Z","level":"error","event":"at py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:50.401917Z","level":"error","event":"at java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.752924Z","level":"info","event":"HELLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.773608Z","level":"info","event":"root","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.774164Z","level":"info","event":" |-- cod: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.774510Z","level":"info","event":" |-- message: float (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.774753Z","level":"info","event":" |-- cnt: integer (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.774954Z","level":"info","event":" |-- list: array (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.775164Z","level":"info","event":" |    |-- element: struct (containsNull = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.775393Z","level":"info","event":" |    |    |-- dt: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.775602Z","level":"info","event":" |    |    |-- main: struct (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.775833Z","level":"info","event":" |    |    |    |-- temp: float (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.776075Z","level":"info","event":" |    |    |    |-- feels_like: float (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.776326Z","level":"info","event":" |    |    |    |-- temp_min: float (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.776553Z","level":"info","event":" |    |    |    |-- temp_max: float (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.776777Z","level":"info","event":" |    |    |    |-- pressure: integer (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.777004Z","level":"info","event":" |    |    |    |-- sea_level: integer (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.777224Z","level":"info","event":" |    |    |    |-- grnd_level: integer (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.777443Z","level":"info","event":" |    |    |    |-- humidity: integer (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.777708Z","level":"info","event":" |    |    |    |-- temp_kf: float (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.777951Z","level":"info","event":" |    |    |-- weather: array (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.778198Z","level":"info","event":" |    |    |    |-- element: struct (containsNull = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.778552Z","level":"info","event":" |    |    |    |    |-- id: integer (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.778814Z","level":"info","event":" |    |    |    |    |-- main: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.779069Z","level":"info","event":" |    |    |    |    |-- description: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.779329Z","level":"info","event":" |    |    |    |    |-- icon: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.779552Z","level":"info","event":" |    |    |-- clouds: struct (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.779882Z","level":"info","event":" |    |    |    |-- all: integer (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.780142Z","level":"info","event":" |    |    |-- wind: struct (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.780366Z","level":"info","event":" |    |    |    |-- speed: float (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.780611Z","level":"info","event":" |    |    |    |-- deg: integer (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.780981Z","level":"info","event":" |    |    |    |-- gust: float (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.781259Z","level":"info","event":" |    |    |-- visibility: integer (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.781535Z","level":"info","event":" |    |    |-- pop: float (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.781962Z","level":"info","event":" |    |    |-- rain: struct (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.782246Z","level":"info","event":" |    |    |    |-- 3h: float (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.782576Z","level":"info","event":" |    |    |-- sys: struct (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.782850Z","level":"info","event":" |    |    |    |-- pod: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.783077Z","level":"info","event":" |    |    |-- dt_txt: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.783341Z","level":"info","event":" |-- city: struct (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.783630Z","level":"info","event":" |    |-- id: integer (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.783908Z","level":"info","event":" |    |-- name: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.784131Z","level":"info","event":" |    |-- coord: struct (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.784403Z","level":"info","event":" |    |    |-- lat: float (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.784687Z","level":"info","event":" |    |    |-- lon: float (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.784892Z","level":"info","event":" |    |-- country: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.785139Z","level":"info","event":" |    |-- population: integer (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.785373Z","level":"info","event":" |    |-- timezone: integer (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.785650Z","level":"info","event":" |    |-- sunrise: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.785932Z","level":"info","event":" |    |-- sunset: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:51.786198Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:54.365833Z","level":"info","event":"+----+-------+----+----+----+","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:54.366332Z","level":"info","event":"| cod|message| cnt|list|city|","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:54.366697Z","level":"info","event":"+----+-------+----+----+----+","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:54.366965Z","level":"info","event":"|NULL|   NULL|NULL|NULL|NULL|","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:54.367198Z","level":"info","event":"|NULL|   NULL|NULL|NULL|NULL|","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:54.367521Z","level":"info","event":"|NULL|   NULL|NULL|NULL|NULL|","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:54.367899Z","level":"info","event":"|NULL|   NULL|NULL|NULL|NULL|","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:54.368141Z","level":"info","event":"|NULL|   NULL|NULL|NULL|NULL|","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:54.368370Z","level":"info","event":"+----+-------+----+----+----+","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:54.368713Z","level":"info","event":"only showing top 5 rows","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:55.259230Z","level":"info","event":"HELLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOO25252525","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:55.260047Z","level":"info","event":"transform data","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:55.418114Z","level":"info","event":"load data","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:58.771723","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-11T17:59:58.826891Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:58.827401Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:58.827776Z","level":"info","event":"Task operator:<Task(PythonOperator): etl_data_weather.load>","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-11T17:59:59.248722Z","level":"error","event":"\r[Stage 0:>                                                          (0 + 1) / 1]\r\r                                                                                \r\r[Stage 4:==============>                                        (54 + 12) / 200]\r\r[Stage 4:========================>                              (88 + 13) / 200]\r\r[Stage 4:=====================================>                (139 + 13) / 200]\r\r[Stage 4:==================================================>   (188 + 12) / 200]","chan":"stderr","logger":"task"}
